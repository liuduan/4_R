EC[i,]=result$EC
direction[i]=result$direction
title(mytitle)
#locator(1)
}
print(i)
}
dev.off()
######### AUC NOT CHECKED BELOW!!! 2/18/15
########## Now look at activity vs. POD
par(mfrow=c(3,4))
active=1-w2$Control
final.auc=rep(0,12)
for (j in (1:12)){
currentroc= roc(active,w2pod[,j],auc=T,plot=T)
title(round(currentroc$auc,4))
final.auc[j]=currentroc$auc
}
###############
###############
## Now output results
colnames(w2pod)=paste("pod.sd",1:3,sep="")
colnames(w2podupper)=paste("pod.sd.upper",1:3,sep="")
colnames(EC)=c("EC10","EC50","EC90")
rownames(w2pod)=mychem
rownames(w2podupper)=mychem
rownames(EC)=mychem
final.df=data.frame(direction,w2pod,w2podupper,EC)
final.notlog10.df=data.frame(direction,10^w2pod,10^w2podupper,10^EC)
names(final.auc)=seq(.25,3,by=.25)
write.csv(final.df,"HG12751_log.csv")
write.csv(final.notlog10.df,"HG12751_original.csv")
write.csv(final.auc,"HG12751_AUC.csv")
setwd("Z:\\RusynLab\\Cell Culture Lab\\Glycol Ethers - Study\\Data Evaluation\\R processing\\Pilot study 2\\GM12872(CEU, Male)")
source("fitfunctions.txt")
#install.packages("pROC")
library(pROC)
#setwd(":\\Data_Feb_2013\\30 min")
#setwd("M:\\Data_Feb_2013\\24 hrs")
gly=read.csv("GM12872_40h_gly.csv")
cell=read.csv("GM12872_40h_cell.csv")
rowblanks=grep(0,nchar(as.vector(cell[,1])))
if (length(rowblanks)>0){cell=cell[-rowblanks,]}
rowblanks=grep(T,nchar(as.vector(gly[,1]))==0)
if (length(rowblanks)>0){gly=gly[-rowblanks,]}
controls=as.vector(unlist(cell[,2])) # the 9:14 may change
hist(controls)
conc=c(rep(0.01,length(controls)),rep(0.1,2),rep(1,2),rep(3,2),rep(10,2),rep(100,2))
# currently the same distance to the "left" of the lowest active dose
startcol=2 # change if necessary
endcol=11 # changed 6 to 5
x=log10(conc)
numchem=dim(gly)[1]
glypod=matrix(NA,dim(gly)[1],3)
glypodupper=matrix(NA,dim(gly)[1],3)
EC=matrix(NA,dim(gly)[1],3)
direction=rep(NA,dim(gly)[1])
mychem=gly$Chemical_name
#for (i in (1:numchem)){
pdf("GM12872_40h_gly.pdf",height=5,width=5) # if for some reason won't write, change filename
for (i in (1:numchem)){
noncontrols=unlist(gly[i,startcol:endcol])
if (sd(noncontrols)>0){
y=c(controls,noncontrols)
#polyfit(x,y,plot.it=T)
#title(mytitle)
#locator(1)
mytitle=paste(as.character(gly[i,1]),i)
result=together.logit4(x,y,plot.it=T,threshold=-10)
glypod[i,]=result$bmd
glypodupper[i,]=result$bmdupper
EC[i,]=result$EC
direction[i]=result$direction
title(mytitle)
#locator(1)
}
print(i)
}
dev.off()
######### AUC NOT CHECKED BELOW!!! 2/18/15
########## Now look at activity vs. POD
par(mfrow=c(3,4))
active=1-gly$Control
final.auc=rep(0,12)
for (j in (1:12)){
currentroc= roc(active,glypod[,j],auc=T,plot=T)
title(round(currentroc$auc,4))
final.auc[j]=currentroc$auc
}
###############
###############
## Now output results
colnames(glypod)=paste("pod.sd",1:3,sep="")
colnames(glypodupper)=paste("pod.sd.upper",1:3,sep="")
colnames(EC)=c("EC10","EC50","EC90")
rownames(glypod)=mychem
rownames(glypodupper)=mychem
rownames(EC)=mychem
final.df=data.frame(direction,glypod,glypodupper,EC)
final.notlog10.df=data.frame(direction,10^glypod,10^glypodupper,10^EC)
names(final.auc)=seq(.25,3,by=.25)
write.csv(final.df,"GM12872_40h_gly_log10.csv")
write.csv(final.notlog10.df,"GM12872_40h_gly_originalscale.csv")
write.csv(final.auc,"GM12872_40h_gly_FinalAUC.csv")
install.packages("gplots", dependencies = TRUE)
library(gplots)
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
data <- read.csv("C:\\Fabian\\Manuscripts\\2016 - Lymphoblasts\\Heatmap R Script_02\\Heatmap_01.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
#########################################################
### C) Customizing and plotting the heat map
#########################################################
# creates a own color palette from red to green
my_palette <- colorRampPalette(c("blue", "green", "red"))(n = 299)
# (optional) defines the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.8,length=100),              # for yellow
seq(0.8,1,length=100))              # for green
# creates a 5 x 5 inch image
png("../images/heatmaps_in_r.png",    # create PNG for the heat map
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()               # close the PNG device
install.packages("gplots", dependencies = TRUE)
library(gplots)
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
data <- read.csv("C:\\Fabian\\Manuscripts\\2016 - Lymphoblasts\\Heatmap R Script_02\\Heatmap_Data_01.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
#########################################################
### C) Customizing and plotting the heat map
#########################################################
# creates a own color palette from red to green
my_palette <- colorRampPalette(c("blue", "green", "red"))(n = 299)
# (optional) defines the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.8,length=100),              # for yellow
seq(0.8,1,length=100))              # for green
# creates a 5 x 5 inch image
png("C:\\Fabian\\Manuscripts\\2016 - Lymphoblasts\\Heatmap R Script_02\\Heatmap_Data_01.png",    # create PNG for the heat map
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()               # close the PNG device
install.packages("gplots", dependencies = TRUE)
data <- read.csv("C:\\Fabian\\Manuscripts\\2016 - Lymphoblasts\\Heatmap R Script_02\\Heatmap_Data_01.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
#########################################################
### C) Customizing and plotting the heat map
#########################################################
# creates a own color palette from red to green
my_palette <- colorRampPalette(c("blue", "green", "red"))(n = 299)
# (optional) defines the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.8,length=100),              # for yellow
seq(0.8,1,length=100))              # for green
# creates a 5 x 5 inch image
png("C:\\Fabian\\Manuscripts\\2016 - Lymphoblasts\\Heatmap R Script_02\\Heatmap_Data_01.png",    # create PNG for the heat map
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()               # close the PNG device
setwd("C:\\Users\\FGrimm\\Desktop\\ACS talk\\R_example")
source("fitfunctions.txt")
#setwd(":\\Data_Feb_2013\\30 min")
#setwd("M:\\Data_Feb_2013\\24 hrs")
tc=read.csv("Chem.csv")
dmso=read.csv("DMSO.csv")
rowblanks=grep(0,nchar(as.vector(dmso[,1])))
if (length(rowblanks)>0){dmso=dmso[-rowblanks,]}
rowblanks=grep(T,nchar(as.vector(tc[,1]))==0)
if (length(rowblanks)>0){tc=tc[-rowblanks,]}
controls=as.vector(unlist(dmso[,2])) # the 9:14 may change
hist(controls)
conc=c(rep(0.01,length(controls)),rep(0.1,3),rep(0.3,3),rep(1,3),rep(3,3),rep(10,3),rep(30,3),rep(100,3))
# currently the same distance to the "left" of the lowest active dose
startcol=2 # change if necessary
endcol=22 # changed 6 to 5
x=log10(conc)
numchem=dim(tc)[1]
tcpod=matrix(NA,dim(tc)[1],3)
tcpodupper=matrix(NA,dim(tc)[1],3)
EC=matrix(NA,dim(tc)[1],3)
direction=rep(NA,dim(tc)[1])
mychem=tc$Chemical_name
#for (i in (1:numchem)){
pdf("R_example.pdf",height=5,width=5) # if for some reason won't write, change filename
for (i in (1:numchem)){
noncontrols=unlist(tc[i,startcol:endcol])
if (sd(noncontrols)>0){
y=c(controls,noncontrols)
#polyfit(x,y,plot.it=T)
#title(mytitle)
#locator(1)
mytitle=paste(as.character(tc[i,1]),i)
result=together.logit4(x,y,plot.it=T,threshold=-10)
tcpod[i,]=result$bmd
tcpodupper[i,]=result$bmdupper
EC[i,]=result$EC
direction[i]=result$direction
title(mytitle)
#locator(1)
}
print(i)
}
dev.off()
######### AUC NOT CHECKED BELOW!!! 2/18/15
########## Now look at activity vs. POD
par(mfrow=c(3,4))
active=1-tc$Control
final.auc=rep(0,12)
for (j in (1:12)){
currentroc= roc(active,tcpod[,j],auc=T,plot=T)
title(round(currentroc$auc,4))
final.auc[j]=currentroc$auc
}
###############
###############
## Now output results
colnames(tcpod)=paste("pod.sd",1:3,sep="")
colnames(tcpodupper)=paste("pod.sd.upper",1:3,sep="")
colnames(EC)=c("EC10","EC50","EC90")
rownames(tcpod)=mychem
rownames(tcpodupper)=mychem
rownames(EC)=mychem
final.df=data.frame(direction,tcpod,tcpodupper,EC)
final.notlog10.df=data.frame(direction,10^tcpod,10^tcpodupper,10^EC)
names(final.auc)=seq(.25,3,by=.25)
write.csv(final.df,"R_example_log10.csv")
write.csv(final.notlog10.df,"R_example_originalscale.csv")
write.csv(final.auc,"R_example_FinalAUC.csv")
install.packages("gplots", dependencies = TRUE)
library(gplots)
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
setwd("J:\\2015 - Green Chemistry\\ToxPi_Evaluation - NEW\\ToxPi_BPC\\Heatmap")
x <- read.csv("ToxPi_BPC_3.csv")
#read in the data:
row.names(x) <- x[,1]
x <- x[,-1]
#transpose the data, depending on if you want to look at correlation of row data or column data:
#y <- t(x)
#find correlation
xy <- cor(x)
#write a table of the correlation values:
hM <- format(round(xy, 2))
write.csv(hM, "ToxPi_BPC_2.csv", quote=FALSE)
#assign colors for the heatmap:
colours =  colorRampPalette(rev(brewer.pal (9, "RdBu")))(255)
heatmap.2(xy, Rowv=TRUE, symm=TRUE, distfun=function(c) as.dist(1 - c), trace="none", col = colours)
#alternately, use a more simple color scheme:
heatmap.2(xy, Rowv=TRUE, symm=TRUE, distfun=function(c) as.dist(1 - c), trace="none", col = redgreen(250))
#make a file of the heatmap:
jpeg("ToxPi_BPC_2.jpg",    # create PNG for the heat map
width = 5*600,        # 5 x 300 pixels
height = 5*600,
res = 600,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(xy, Rowv=TRUE, symm=TRUE, distfun=function(c) as.dist(1 - c), trace="none", col = colours, main="Correlation: chemicals")
dev.off()
plot(Subject, ToxPi)
plot(Rank,ToxPi)
plot(Rank,ToxPi)
plot(Rank)
plot(ToxPi)
plot("Rank","ToxPi")
plot(datavar)
setwd("Z:\\RusynLab\\Cell Culture Lab\\Concawe Screening\\iPSC cardiomyocytes\\R Processing\\Total Cells - 90 min")
source("fitfunctions.txt")
#install.packages("pROC")
library(pROC)
w2=read.csv("Data.csv")
dmso=read.csv("Vehicle.csv")
rowblanks=grep(0,nchar(as.vector(dmso[,1])))
if (length(rowblanks)>0){dmso=dmso[-rowblanks,]}
rowblanks=grep(T,nchar(as.vector(w2[,1]))==0)
if (length(rowblanks)>0){w2=w2[-rowblanks,]}
controls=as.vector(unlist(dmso[,2])) # the 9:14 may change
hist(controls)
conc=c(rep(0.01,length(controls)),rep(0.1,1),rep(1,1),rep(10,1),rep(100,1))
startcol=2
endcol=5
x=log10(conc)
numchem=dim(w2)[1]
w2pod=matrix(NA,dim(w2)[1],3)
w2podupper=matrix(NA,dim(w2)[1],3)
EC=matrix(NA,dim(w2)[1],3)
direction=rep(NA,dim(w2)[1])
mychem=w2$Chemical_name
#for (i in (1:numchem)){
pdf("TC_90min.pdf",height=5,width=5)
for (i in (1:numchem)){
noncontrols=unlist(w2[i,startcol:endcol])
if (sd(noncontrols)>0){
y=c(controls,noncontrols)
#polyfit(x,y,plot.it=T)
#title(mytitle)
#locator(1)
mytitle=paste(as.character(w2[i,1]),i)
result=together.logit4(x,y,plot.it=T,threshold=-25)
w2pod[i,]=result$bmd
w2podupper[i,]=result$bmdupper
EC[i,]=result$EC
direction[i]=result$direction
title(mytitle)
#locator(1)
}
print(i)
}
dev.off()
######### AUC NOT CHECKED BELOW!!! 2/18/15
########## Now look at activity vs. POD
par(mfrow=c(3,4))
active=1-w2$Control
final.auc=rep(0,12)
for (j in (1:12)){
currentroc= roc(active,w2pod[,j],auc=T,plot=T)
title(round(currentroc$auc,4))
final.auc[j]=currentroc$auc
}
###############
###############
## Now output results
colnames(w2pod)=paste("pod.sd",1:3,sep="")
colnames(w2podupper)=paste("pod.sd.upper",1:3,sep="")
colnames(EC)=c("EC10","EC50","EC90")
rownames(w2pod)=mychem
rownames(w2podupper)=mychem
rownames(EC)=mychem
final.df=data.frame(direction,w2pod,w2podupper,EC)
final.notlog10.df=data.frame(direction,10^w2pod,10^w2podupper,10^EC)
names(final.auc)=seq(.25,3,by=.25)
write.csv(final.df,"TC_90min_log10.csv")
write.csv(final.notlog10.df,"TC_90min_originalscale.csv")
setwd("Z:\\RusynLab\\Cell Culture Lab\\Concawe Screening\\iPSC cardiomyocytes\\R Processing\\Total Cells - 90 min")
source("fitfunctions.txt")
#install.packages("pROC")
library(pROC)
w2=read.csv("Data.csv")
dmso=read.csv("Vehicle.csv")
rowblanks=grep(0,nchar(as.vector(dmso[,1])))
if (length(rowblanks)>0){dmso=dmso[-rowblanks,]}
rowblanks=grep(T,nchar(as.vector(w2[,1]))==0)
if (length(rowblanks)>0){w2=w2[-rowblanks,]}
controls=as.vector(unlist(dmso[,2])) # the 9:14 may change
hist(controls)
conc=c(rep(0.01,length(controls)),rep(0.1,1),rep(0.5,1),rep(1,1),rep(10,1),rep(50,1))
startcol=2
endcol=6
x=log10(conc)
numchem=dim(w2)[1]
w2pod=matrix(NA,dim(w2)[1],3)
w2podupper=matrix(NA,dim(w2)[1],3)
EC=matrix(NA,dim(w2)[1],3)
direction=rep(NA,dim(w2)[1])
mychem=w2$Chemical_name
#for (i in (1:numchem)){
pdf("TC_90min_Controls.pdf",height=5,width=5)
for (i in (1:numchem)){
noncontrols=unlist(w2[i,startcol:endcol])
if (sd(noncontrols)>0){
y=c(controls,noncontrols)
#polyfit(x,y,plot.it=T)
#title(mytitle)
#locator(1)
mytitle=paste(as.character(w2[i,1]),i)
result=together.logit4(x,y,plot.it=T,threshold=-25)
w2pod[i,]=result$bmd
w2podupper[i,]=result$bmdupper
EC[i,]=result$EC
direction[i]=result$direction
title(mytitle)
#locator(1)
}
print(i)
}
dev.off()
######### AUC NOT CHECKED BELOW!!! 2/18/15
########## Now look at activity vs. POD
par(mfrow=c(3,4))
active=1-w2$Control
final.auc=rep(0,12)
for (j in (1:12)){
currentroc= roc(active,w2pod[,j],auc=T,plot=T)
title(round(currentroc$auc,4))
final.auc[j]=currentroc$auc
}
###############
###############
## Now output results
colnames(w2pod)=paste("pod.sd",1:3,sep="")
colnames(w2podupper)=paste("pod.sd.upper",1:3,sep="")
colnames(EC)=c("EC10","EC50","EC90")
rownames(w2pod)=mychem
rownames(w2podupper)=mychem
rownames(EC)=mychem
final.df=data.frame(direction,w2pod,w2podupper,EC)
final.notlog10.df=data.frame(direction,10^w2pod,10^w2podupper,10^EC)
names(final.auc)=seq(.25,3,by=.25)
write.csv(final.df,"TC_90min_Contrls_log10.csv")
write.csv(final.notlog10.df,"TC_90min_Controls_originalscale.csv")
setwd("Z:\\RusynLab\\Cell Culture Lab\\Concawe Screening\\iPSC cardiomyocytes\\R Processing\\Total Cells - 90 min")
source("fitfunctions.txt")
#install.packages("pROC")
library(pROC)
w2=read.csv("Controls.csv")
dmso=read.csv("Vehicle.csv")
rowblanks=grep(0,nchar(as.vector(dmso[,1])))
if (length(rowblanks)>0){dmso=dmso[-rowblanks,]}
rowblanks=grep(T,nchar(as.vector(w2[,1]))==0)
if (length(rowblanks)>0){w2=w2[-rowblanks,]}
controls=as.vector(unlist(dmso[,2])) # the 9:14 may change
hist(controls)
conc=c(rep(0.01,length(controls)),rep(0.1,1),rep(0.5,1),rep(1,1),rep(10,1),rep(50,1))
startcol=2
endcol=6
x=log10(conc)
numchem=dim(w2)[1]
w2pod=matrix(NA,dim(w2)[1],3)
w2podupper=matrix(NA,dim(w2)[1],3)
EC=matrix(NA,dim(w2)[1],3)
direction=rep(NA,dim(w2)[1])
mychem=w2$Chemical_name
#for (i in (1:numchem)){
pdf("TC_90min_Controls.pdf",height=5,width=5)
for (i in (1:numchem)){
noncontrols=unlist(w2[i,startcol:endcol])
if (sd(noncontrols)>0){
y=c(controls,noncontrols)
#polyfit(x,y,plot.it=T)
#title(mytitle)
#locator(1)
mytitle=paste(as.character(w2[i,1]),i)
result=together.logit4(x,y,plot.it=T,threshold=-25)
w2pod[i,]=result$bmd
w2podupper[i,]=result$bmdupper
EC[i,]=result$EC
direction[i]=result$direction
title(mytitle)
#locator(1)
}
print(i)
}
dev.off()
######### AUC NOT CHECKED BELOW!!! 2/18/15
########## Now look at activity vs. POD
par(mfrow=c(3,4))
active=1-w2$Control
final.auc=rep(0,12)
for (j in (1:12)){
currentroc= roc(active,w2pod[,j],auc=T,plot=T)
title(round(currentroc$auc,4))
final.auc[j]=currentroc$auc
}
###############
###############
## Now output results
colnames(w2pod)=paste("pod.sd",1:3,sep="")
colnames(w2podupper)=paste("pod.sd.upper",1:3,sep="")
colnames(EC)=c("EC10","EC50","EC90")
rownames(w2pod)=mychem
rownames(w2podupper)=mychem
rownames(EC)=mychem
final.df=data.frame(direction,w2pod,w2podupper,EC)
final.notlog10.df=data.frame(direction,10^w2pod,10^w2podupper,10^EC)
names(final.auc)=seq(.25,3,by=.25)
write.csv(final.df,"TC_90min_Contrls_log10.csv")
write.csv(final.notlog10.df,"TC_90min_Controls_originalscale.csv")
